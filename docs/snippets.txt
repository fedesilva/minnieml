
union Maybe 'T =
  | One: 'T
  | None

# empty :: Maybe 'T -> Boolean
fn empty match
    | None  = true
    | _     = false

# empty :: Maybe 'T -> Boolean
fn nonEmpty maybe =
  ! empty maybe

union Species =
  | Cat
  | Dog
  | Bird
  | GoldFish

type Pet =
  {
    name: String
    species: Species
  }

type Person =
  {
    name: String
    pet: Maybe Pet
  }

# hasPet :: 'T : { pet: Maybe Pet } -> Boolean
fn hasPet p =
  nonEmpty p.pet

let zur     = Pet     "Zur"     Species.Cat
let fede    = Person  "Fede"    (Maybe.One zur)
let victor  = Person  "Victor"  Maybe.None




